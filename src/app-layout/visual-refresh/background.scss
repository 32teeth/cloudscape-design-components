/*
 Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 SPDX-License-Identifier: Apache-2.0
*/
@use '../../internal/styles/' as styles;
@use '../../internal/styles/tokens' as awsui;
@use '../../internal/generated/custom-css-properties/index.scss' as custom-props;

div.background {
  display: contents;

  > .notifications-appbar-header {
    background-color: awsui.$color-background-layout-main;
    grid-column: 1 / span 5;
    grid-row: 1 / span 3;

    /*
    The cards and table content types have a sticky dark header that is 
    offset beneath the sticky notifications if they exist. If the background 
    is not sticky then it will scroll out of the viewport leaving a white space
    behind the notifications above the content dark header.
    */
    @include styles.media-breakpoint-up(styles.$breakpoint-x-small) {
      &.content-type-cards.has-notifications-content.sticky-notifications,
      &.content-type-table.has-notifications-content.sticky-notifications {
        position: sticky;
        top: var(#{custom-props.$offsetTop});
        z-index: 799;
      }
    }
  }

  > .overlap {
    background-color: awsui.$color-background-layout-main;
    grid-column: 1 / span 5;
    grid-row: 4;

    /*
    The cards and table content types have sticky header content that 
    will retain position on viewport scroll. They are setting the 
    dynamicOverlapHeight property in the AppLayout context with a container query 
    that observes the content height. The background needs to be sticky in 
    desktop viewports without overlapping notification content if it exists.
    */
    @include styles.media-breakpoint-up(styles.$breakpoint-x-small) {
      &.content-type-cards,
      &.content-type-table {
        position: sticky;
        top: var(#{custom-props.$offsetTopWithNotifications});
        z-index: 799;
      }
    }
  }
}
